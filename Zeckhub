local a=game:GetService("Players")local b=game:GetService("RunService")local c=game:GetService("Workspace")local d=game:GetService("Lighting")local e=game:GetService("CoreGui")local f=game:GetService("TeleportService")local g=game:GetService("ReplicatedStorage")local h=a.LocalPlayer;local i=c.CurrentCamera;local j={}local k={}local l=0;local m=30;local n={Brightness=d.Brightness,Ambient=d.Ambient,OutdoorAmbient=d.OutdoorAmbient,FogEnd=d.FogEnd}d.Brightness=1;d.Ambient=Color3.fromRGB(128,128,128)d.OutdoorAmbient=Color3.fromRGB(128,128,128)d.FogEnd=1000;for o,p in pairs(d:GetChildren())do if p:IsA("PostEffect")then p:Destroy()end end;local function q()f:Teleport(game.PlaceId,h)end;local function r()j={}k={}for o,s in pairs(a:GetPlayers())do j[#j+1]=s;if s.Character then k[s]=s.Character end end end;local function t(s)return s~=h and s.Team and h.Team and s.Team~=h.Team end;e.ChildAdded:Connect(function(u)if u:IsA("ScreenGui")and u.Name=="ErrorPrompt"then task.wait(2)q()end end)local v,w=pcall(function()return loadstring(game:HttpGet("https://sirius.menu/rayfield"))()end)if not v or not w then warn("zeckhub failed to load")return end;local x=w:CreateWindow({Name="zeckhub",LoadingTitle="loading ZeckHub...",LoadingSubtitle="by Robertzeck",ConfigurationSaving={Enabled=true,FileName="zeckhub_config"},KeySystem=false,Theme="Dark",ToggleUIKeybind=Enum.KeyCode.K})local y=x:CreateTab("Updates","bell-dot")local z=y:CreateSection("change longs")local A=y:CreateParagraph({Title="Updates",Content="Added a toggle for the hitbox, character esp to know where you aim with the auto shift locks. Small textual guides were also added, nothing important. More optimization"})local A=y:CreateParagraph({Title="Updates soon",Content="The directional hit will be coming soon. For now, we have brought you the esp character. We will be working on the directional hit and the powerful serve."})local B=x:CreateTab("Game","flame")B:CreateSection("Hitbox ball")local C={scale=5.0,enabled=true,cache={},lastUpdate=0}function C:findBallPart(D)for o,E in pairs(D:GetDescendants())do if E:IsA("BasePart")then return E end end;return nil end;function C:createHitbox(D,F)local G=D:FindFirstChild("Ball.001")if G then G.Size=Vector3.new(2,2,2)*F;return G end;local H=self:findBallPart(D)if not H then return nil end;local I=Instance.new("Part")I.Name="Ball.001"I.Shape=Enum.PartType.Ball;I.Size=Vector3.new(2,2,2)*F;I.CFrame=H.CFrame;I.Anchored=true;I.CanCollide=false;I.Transparency=0.7;I.Material=Enum.Material.ForceField;I.Color=Color3.fromRGB(0,255,0)I.Parent=D;return I end;function C:updateHitboxes()if not self.enabled then return end;for o,D in pairs(c:GetChildren())do if D:IsA("Model")and D.Name:match("^CLIENT_BALL_%d+$")then self:createHitbox(D,self.scale)end end end;function C:clearHitboxes()for o,D in pairs(c:GetChildren())do if D:IsA("Model")and D.Name:match("^CLIENT_BALL_%d+$")then local I=D:FindFirstChild("Ball.001")if I then I:Destroy()end end end end;c.ChildAdded:Connect(function(u)if u:IsA("Model")and u.Name:match("^CLIENT_BALL_%d+$")then task.wait(0.1)if C.enabled then C:createHitbox(u,C.scale)end end end)B:CreateSlider({Name="Hitbox Size",Range={0,20},Increment=0.1,Suffix="x",CurrentValue=C.scale,Callback=function(J)C.scale=J;C:updateHitboxes()end})B:CreateToggle({Name="Enable Hitboxes",CurrentValue=true,Callback=function(J)C.enabled=J;if J then C:updateHitboxes()else C:clearHitboxes()end end})local K=x:CreateTab("main","user-round")K:CreateSection("character functions")local L={directionalJump=true,airMovement=false,airSpeed=16,activeBodyVelocity=nil}function L:getWalkSpeed()local M=h.Character and h.Character:FindFirstChild("Humanoid")return M and M.WalkSpeed or 16 end;function L:enableAirMovement(N)if self.activeBodyVelocity then return end;local O=Instance.new("BodyVelocity")O.MaxForce=Vector3.new(1e5,0,1e5)O.Velocity=Vector3.zero;O.P=2500;O.Name="AirControlVelocity"O.Parent=N;self.activeBodyVelocity=O end;function L:disableAirMovement()if self.activeBodyVelocity then self.activeBodyVelocity:Destroy()self.activeBodyVelocity=nil end end;function L:setupCharacter(P)local M=P:WaitForChild("Humanoid")local N=P:WaitForChild("HumanoidRootPart")self.airSpeed=self:getWalkSpeed()M:GetPropertyChangedSignal("Jump"):Connect(function()if not M.Jump then return end;if self.directionalJump then task.spawn(function()task.wait(0.03)local Q=Vector3.new(i.CFrame.LookVector.X,0,i.CFrame.LookVector.Z)if Q.Magnitude>0 then N.CFrame=CFrame.lookAt(N.Position,N.Position+Q.Unit)M.AutoRotate=false end end)else M.AutoRotate=true end end)M.StateChanged:Connect(function(o,R)if R==Enum.HumanoidStateType.Freefall then if self.airMovement then self:enableAirMovement(N)end elseif R==Enum.HumanoidStateType.Landed then self:disableAirMovement()M.AutoRotate=true end end)end;if h.Character then L:setupCharacter(h.Character)end;h.CharacterAdded:Connect(function(S)L:setupCharacter(S)end)K:CreateToggle({Name="Auto Shift Lock",CurrentValue=true,Callback=function(J)L.directionalJump=J end})K:CreateToggle({Name="Air Movement",CurrentValue=false,Callback=function(J)L.airMovement=J;if not J then L:disableAirMovement()end end})K:CreateSlider({Name="Air Speed",Range={0,100},Increment=1,CurrentValue=L:getWalkSpeed(),Suffix=" studs/s",Callback=function(J)L.airSpeed=J end})local T={enabled=false,color=Color3.fromRGB(255,255,255),folder=nil,clones={},connection=nil,lastUpdate=0}local U={Head=true,Torso=true,UpperTorso=true,LowerTorso=true,LeftArm=true,RightArm=true,LeftUpperArm=true,RightUpperArm=true,LeftLowerArm=true,RightLowerArm=true,LeftHand=true,RightHand=true,LeftLeg=true,RightLeg=true,LeftUpperLeg=true,RightUpperLeg=true,LeftLowerLeg=true,RightLowerLeg=true,LeftFoot=true,RightFoot=true,HumanoidRootPart=true}function T:cleanup()if self.connection then self.connection:Disconnect()self.connection=nil end;if self.folder then self.folder:Destroy()self.folder=nil end;self.clones={}end;function T:createESP(P)if not P then return end;local N=P:FindFirstChild("HumanoidRootPart")if not N then return end;self:cleanup()self.folder=Instance.new("Folder")self.folder.Name="ESP_Clones"self.folder.Parent=i;for o,E in pairs(P:GetChildren())do if(E:IsA("Part")or E:IsA("MeshPart"))and U[E.Name]then local V=E:Clone()V.Anchored=true;V.CanCollide=false;V.CanTouch=false;V.CanQuery=false;V.Color=self.color;V.Material=E.Material;V.Transparency=E.Transparency+0.3;V.Parent=self.folder;for o,u in pairs(V:GetChildren())do if not(u:IsA("Decal")or u:IsA("Texture")or u:IsA("SurfaceGui"))then u:Destroy()end end;self.clones[E]=V end end;self.connection=b.Heartbeat:Connect(function()local W=tick()if W-self.lastUpdate<0.016 then return end;self.lastUpdate=W;if not P or not P.Parent or not N then return end;local X=i.CFrame.LookVector;local Y=Vector3.new(X.X,0,X.Z).Unit;local Z=N.Position-Y*5;local _=CFrame.new(Z,Z+Y)for a0,V in pairs(self.clones)do if a0 and a0.Parent and V and V.Parent then local v,a1=pcall(function()return N.CFrame:ToObjectSpace(a0.CFrame)end)if v then V.CFrame=_*a1 end end end end)end;K:CreateToggle({Name="Character ESP",CurrentValue=false,Callback=function(J)T.enabled=J;if J and h.Character then T:createESP(h.Character)else T:cleanup()end end})K:CreateColorPicker({Name="ESP Color",Color=T.color,Callback=function(a2)T.color=a2;for o,V in pairs(T.clones)do if V and V.Parent then V.Color=a2 end end end})local a3={enabled=true,distance=50,beams={},lastUpdate=0,colors={Color3.fromRGB(255,0,0),Color3.fromRGB(0,255,0),Color3.fromRGB(0,0,255),Color3.fromRGB(255,165,0),Color3.fromRGB(128,0,128),Color3.fromRGB(255,255,0),Color3.fromRGB(139,0,0),Color3.fromRGB(0,100,0)}}function a3:clearLine(s)local a4=self.beams[s]if a4 then if a4.beam then a4.beam:Destroy()end;if a4.target then a4.target:Destroy()end;if a4.attachment then a4.attachment:Destroy()end;self.beams[s]=nil end end;function a3:updateLine(s,a5)if not self.enabled then self:clearLine(s)return end;local P=k[s]if not P then self:clearLine(s)return end;local a6=P:FindFirstChild("Head")local N=P:FindFirstChild("HumanoidRootPart")if not a6 or not N then self:clearLine(s)return end;if not self.beams[s]then local a7=Instance.new("Attachment",a6)local a8=Instance.new("Part")a8.Anchored=true;a8.CanCollide=false;a8.Transparency=1;a8.Size=Vector3.new(0.1,0.1,0.1)a8.Parent=c;local a9=Instance.new("Attachment",a8)local aa=Instance.new("Beam")aa.Attachment0=a7;aa.Attachment1=a9;aa.Width0=0.25;aa.Width1=0.25;aa.FaceCamera=true;aa.LightEmission=1;aa.Transparency=NumberSequence.new(0.3)aa.Color=ColorSequence.new(self.colors[(a5-1)%#self.colors+1])aa.Parent=a6;self.beams[s]={beam=aa,target=a8,attachment=a7}end;local ab=self.beams[s]ab.target.Position=a6.Position+N.CFrame.LookVector*self.distance end;local ac=x:CreateTab("visual","moon")ac:CreateSection("visual effects")local ad={jumpESP=true,jumpESPStorage={},connections={}}function ad:createJumpESP(s)if not s.Character or self.jumpESPStorage[s]then return end;local ae=Instance.new("Highlight")ae.Name="JumpESP"ae.Adornee=s.Character;ae.FillTransparency=1;ae.OutlineTransparency=0;ae.OutlineColor=Color3.fromRGB(255,255,0)ae.DepthMode=Enum.HighlightDepthMode.AlwaysOnTop;ae.Parent=s.Character;self.jumpESPStorage[s]=ae end;function ad:removeJumpESP(s)if self.jumpESPStorage[s]then self.jumpESPStorage[s]:Destroy()self.jumpESPStorage[s]=nil end end;function ad:setupJumpESP(s)if s==h then return end;local function af(P)local M=P:WaitForChild("Humanoid",3)if not M then return end;local ag=M.StateChanged:Connect(function(o,ah)if not self.jumpESP or not t(s)then return end;if ah==Enum.HumanoidStateType.Jumping or ah==Enum.HumanoidStateType.Freefall then self:createJumpESP(s)elseif ah==Enum.HumanoidStateType.Landed then self:removeJumpESP(s)end end)self.connections[s]={ag}end;if s.Character then af(s.Character)end;s.CharacterAdded:Connect(af)end;for o,s in pairs(a:GetPlayers())do ad:setupJumpESP(s)end;a.PlayerAdded:Connect(function(s)ad:setupJumpESP(s)end)ac:CreateToggle({Name="Jump ESP",CurrentValue=true,Callback=function(J)ad.jumpESP=J;if not J then for s in pairs(ad.jumpESPStorage)do ad:removeJumpESP(s)end end end})local ai=x:CreateTab("helpers","eye")ai:CreateSection("directional lines")ai:CreateToggle({Name="Enable Lines",CurrentValue=true,Callback=function(J)a3.enabled=J;if not J then for s in pairs(a3.beams)do a3:clearLine(s)end end end})ai:CreateSlider({Name="Line Distance",Range={0,100},Increment=10,CurrentValue=a3.distance,Suffix=" studs",Callback=function(J)a3.distance=J end})local aj=x:CreateTab("others","alert-triangle")aj:CreateSection("utilities")aj:CreateButton({Name="Rejoin",Callback=q})aj:CreateButton({Name="Turn Off All",Callback=function()C:clearHitboxes()L.directionalJump=false;L.airMovement=false;a3.enabled=false;T:cleanup()for s in pairs(a3.beams)do a3:clearLine(s)end;w:Notify({Title="Panic Mode",Content="All features disabled.",Duration=3,Image="skull"})end})local ak=0;local al={}al.main=b.Heartbeat:Connect(function()l=l+1;local W=tick()if l%m==0 then r()end;if W-ak<0.033 then return end;ak=W;if a3.enabled then for am,s in pairs(j)do if s~=h and t(s)then a3:updateLine(s,am)else a3:clearLine(s)end end end;if L.airMovement and L.activeBodyVelocity and h.Character then local M=h.Character:FindFirstChild("Humanoid")if M then L.activeBodyVelocity.Velocity=M.MoveDirection*L.airSpeed end end end)a.PlayerRemoving:Connect(function(s)a3:clearLine(s)ad:removeJumpESP(s)if ad.connections[s]then for o,an in pairs(ad.connections[s])do pcall(function()an:Disconnect()end)end;ad.connections[s]=nil end;k[s]=nil end)r()
